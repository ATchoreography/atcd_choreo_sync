name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-android:
    name: "Quest/Android"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'

      - name: Set up secrets
        env:
          ANDROID_KEY_PROPRERTIES: ${{ secrets.ANDROID_KEY_PROPRERTIES }}
          ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
        run: |
          echo "$ANDROID_KEY_PROPRERTIES" > android/key.properties
          echo "$ANDROID_RELEASE_KEYSTORE" | base64 -d > /tmp/keystore.jks

      - name: Build app
        run: |
          flutter build apk
          flutter build appbundle
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3.0.0
        with:
          name: app_android
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

  build-windows:
    name: "Windows"
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
          
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'
      
      - name: Build app
        shell: bash
        run: |
          flutter config --enable-windows-desktop
          flutter build windows
          mkdir outputs/
          mv build/windows/runner/Release/ outputs/atcd_choreo_sync
          # Get sqlite3
          curl -L https://raw.githubusercontent.com/tekartik/sqflite/master/sqflite_common_ffi/lib/src/windows/sqlite3.dll > outputs/atcd_choreo_sync/sqlite3.dll
          # Get 7-Zip
          curl https://www.7-zip.org/a/7z2107-extra.7z > 7z.7z
          7z x 7z.7z
          cp 7za.exe outputs/atcd_choreo_sync
 
      - name: Upload build
        uses: actions/upload-artifact@v3.0.0
        with:
          name: app_windows
          path: outputs/

  build-linux:
    name: "Linux AppImage"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libsqlite3-0
          
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'
      
      - name: Build app
        run: |
          flutter config --enable-linux-desktop
          flutter build linux

      - name: Pack AppImage
        run: |
          mkdir outputs/
          # Get 7zip
          curl https://www.7-zip.org/a/7z2107-linux-x64.tar.xz | tar -xJ
          # Build AppDir
          ./linux/make_appdir.sh
          # Copy 7zip
          cp 7zzs AppDir/
          # Get appimagetool and build appimage
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage > appimagetool.AppImage
          chmod +x appimagetool.AppImage
          ARCH=x86_64 ./appimagetool.AppImage AppDir './outputs/atcd_choreo_sync.AppImage'

      - name: Upload build
        uses: actions/upload-artifact@v3.0.0
        with:
          name: appimage_linux
          path: outputs/

  build-macos:
    name: "macOS"
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
          
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.10.4'
      
      - name: Build app
        shell: bash
        run: |
          flutter config --enable-macos-desktop
          flutter build macos
          mkdir outputs
          mv 'build/macos/Build/Products/Release/ATCD Choreography Sync.app' outputs/
          curl https://www.7-zip.org/a/7z2107-mac.tar.xz | tar -xJ  # Download 7-zip
          cp 7zz 'outputs/ATCD Choreography Sync.app/Contents/MacOS/'
          cp macos/app_is_damaged.txt 'outputs/Fix App is damaged.txt' 
               
      - name: Upload build
        uses: actions/upload-artifact@v3.0.0
        with:
          name: app_macos
          path: outputs/

  release:
    name: "Upload release binaries"
    runs-on: ubuntu-latest
    needs:
      - build-android
      - build-windows
      - build-linux
      - build-macos
    steps:
      - name: Setup
        run: |
          mkdir app_windows
          mkdir app_macos

      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: app_windows
          path: ./app_windows/

      - name: Download macOS build
        uses: actions/download-artifact@v3
        with:
          name: app_macos
          path: .

      - name: Download Android build
        uses: actions/download-artifact@v3
        with:
          name: app_android
          path: .

      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: appimage_linux
          path: .

      - name: Fixup builds
        shell: bash
        env:
          TAG: ${{ github.ref_name }}
        run: |
          mkdir outputs
          mv *AppImage "outputs/atcd_choreo_sync-gnulinux-$TAG.AppImage"
          mv app_windows/atcd_choreo_sync "atcd_choreo_sync-windows-$TAG"
          zip -r "outputs/atcd_choreo_sync-windows-$TAG.zip" "atcd_choreo_sync-windows-$TAG"
          zip -r "outputs/atcd_choreo_sync-macOS-$TAG.zip" "ATCD Choreography Sync.app" "Fix App is damaged.txt"
          mv flutter-apk/app-release.apk "outputs/atcd_choreo_sync-OculusQuest-android-$TAG.apk"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: outputs/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
          prerelease: true

